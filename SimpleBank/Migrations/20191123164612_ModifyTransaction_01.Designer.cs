// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleBank.Data;

namespace SimpleBank.Migrations
{
    [DbContext(typeof(SimpleBankContext))]
    [Migration("20191123164612_ModifyTransaction_01")]
    partial class ModifyTransaction_01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleBank.Models.BankAccount", b =>
                {
                    b.Property<string>("BankAccountID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BankAccountID");

                    b.HasIndex("UserID");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("SimpleBank.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BankAccountID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CreditType")
                        .HasColumnType("int");

                    b.Property<int?>("DebitType")
                        .HasColumnType("int");

                    b.Property<double>("NewBalance")
                        .HasColumnType("float");

                    b.Property<double>("PreviousBalance")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TransactionID");

                    b.HasIndex("BankAccountID");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("SimpleBank.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SimpleBank.Models.BankAccount", b =>
                {
                    b.HasOne("SimpleBank.Models.User", "User")
                        .WithMany("BankAccounts")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("SimpleBank.Models.Transaction", b =>
                {
                    b.HasOne("SimpleBank.Models.BankAccount", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("BankAccountID");
                });
#pragma warning restore 612, 618
        }
    }
}
